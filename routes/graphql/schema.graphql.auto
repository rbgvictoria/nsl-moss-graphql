#import ../../app/Http/GraphQL/Types/Author.graphql
#import ../../app/Http/GraphQL/Types/Instance.graphql
#import ../../app/Http/GraphQL/Types/InstanceType.graphql
#import ../../app/Http/GraphQL/Types/Name.graphql
#import ../../app/Http/GraphQL/Types/NameCategory.graphql
#import ../../app/Http/GraphQL/Types/NameGroup.graphql
#import ../../app/Http/GraphQL/Types/NameRank.graphql
#import ../../app/Http/GraphQL/Types/NameStatus.graphql
#import ../../app/Http/GraphQL/Types/NameType.graphql
#import ../../app/Http/GraphQL/Types/RefAuthorRole.graphql
#import ../../app/Http/GraphQL/Types/RefType.graphql
#import ../../app/Http/GraphQL/Types/Reference.graphql
#import ../../app/Http/GraphQL/Types/Scalars.graphql

type Query{
    authors(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, abbrev: String @eq, abbrev_not: String @not, abbrev_in: [String] @in, abbrev_not_in: [String] @not_in, abbrev_contains: String @contains, abbrev_not_contains: String @not_contains, abbrev_starts_with: String @starts_with, abbrev_not_starts_with: String @not_starts_with, abbrev_ends_with: String @not_ends_with, fullName: String @eq, fullName_not: String @not, fullName_in: [String] @in, fullName_not_in: [String] @not_in, fullName_contains: String @contains, fullName_not_contains: String @not_contains, fullName_starts_with: String @starts_with, fullName_not_starts_with: String @not_starts_with, fullName_ends_with: String @not_ends_with, ipniId: String @eq, ipniId_not: String @not, ipniId_in: [String] @in, ipniId_not_in: [String] @not_in, ipniId_contains: String @contains, ipniId_not_contains: String @not_contains, ipniId_starts_with: String @starts_with, ipniId_not_starts_with: String @not_starts_with, ipniId_ends_with: String @not_ends_with, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [Author]! @all(model: "Author")
    authorsPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, abbrev: String @eq, abbrev_not: String @not, abbrev_in: [String] @in, abbrev_not_in: [String] @not_in, abbrev_contains: String @contains, abbrev_not_contains: String @not_contains, abbrev_starts_with: String @starts_with, abbrev_not_starts_with: String @not_starts_with, abbrev_ends_with: String @not_ends_with, fullName: String @eq, fullName_not: String @not, fullName_in: [String] @in, fullName_not_in: [String] @not_in, fullName_contains: String @contains, fullName_not_contains: String @not_contains, fullName_starts_with: String @starts_with, fullName_not_starts_with: String @not_starts_with, fullName_ends_with: String @not_ends_with, ipniId: String @eq, ipniId_not: String @not, ipniId_in: [String] @in, ipniId_not_in: [String] @not_in, ipniId_contains: String @contains, ipniId_not_contains: String @not_contains, ipniId_starts_with: String @starts_with, ipniId_not_starts_with: String @not_starts_with, ipniId_ends_with: String @not_ends_with, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [Author]! @paginate(model: "Author")
    author(id: ID! @eq): Author! @find(model: "Author")
    instances(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, bhlUrl: String @eq, bhlUrl_not: String @not, bhlUrl_in: [String] @in, bhlUrl_not_in: [String] @not_in, bhlUrl_contains: String @contains, bhlUrl_not_contains: String @not_contains, bhlUrl_starts_with: String @starts_with, bhlUrl_not_starts_with: String @not_starts_with, bhlUrl_ends_with: String @not_ends_with, nomenclaturalStatus: String @eq, nomenclaturalStatus_not: String @not, nomenclaturalStatus_in: [String] @in, nomenclaturalStatus_not_in: [String] @not_in, nomenclaturalStatus_contains: String @contains, nomenclaturalStatus_not_contains: String @not_contains, nomenclaturalStatus_starts_with: String @starts_with, nomenclaturalStatus_not_starts_with: String @not_starts_with, nomenclaturalStatus_ends_with: String @not_ends_with, page: String @eq, page_not: String @not, page_in: [String] @in, page_not_in: [String] @not_in, page_contains: String @contains, page_not_contains: String @not_contains, page_starts_with: String @starts_with, page_not_starts_with: String @not_starts_with, page_ends_with: String @not_ends_with, pageQualifier: String @eq, pageQualifier_not: String @not, pageQualifier_in: [String] @in, pageQualifier_not_in: [String] @not_in, pageQualifier_contains: String @contains, pageQualifier_not_contains: String @not_contains, pageQualifier_starts_with: String @starts_with, pageQualifier_not_starts_with: String @not_starts_with, pageQualifier_ends_with: String @not_ends_with, uri: String @eq, uri_not: String @not, uri_in: [String] @in, uri_not_in: [String] @not_in, uri_contains: String @contains, uri_not_contains: String @not_contains, uri_starts_with: String @starts_with, uri_not_starts_with: String @not_starts_with, uri_ends_with: String @not_ends_with, verbatimNameString: String @eq, verbatimNameString_not: String @not, verbatimNameString_in: [String] @in, verbatimNameString_not_in: [String] @not_in, verbatimNameString_contains: String @contains, verbatimNameString_not_contains: String @not_contains, verbatimNameString_starts_with: String @starts_with, verbatimNameString_not_starts_with: String @not_starts_with, verbatimNameString_ends_with: String @not_ends_with, instanceTypeName: String @eq, instanceTypeName_not: String @not, instanceTypeName_in: [String] @in, instanceTypeName_not_in: [String] @not_in, instanceTypeName_contains: String @contains, instanceTypeName_not_contains: String @not_contains, instanceTypeName_starts_with: String @starts_with, instanceTypeName_not_starts_with: String @not_starts_with, instanceTypeName_ends_with: String @not_ends_with): [Instance]! @all(model: "Instance")
    instancesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, bhlUrl: String @eq, bhlUrl_not: String @not, bhlUrl_in: [String] @in, bhlUrl_not_in: [String] @not_in, bhlUrl_contains: String @contains, bhlUrl_not_contains: String @not_contains, bhlUrl_starts_with: String @starts_with, bhlUrl_not_starts_with: String @not_starts_with, bhlUrl_ends_with: String @not_ends_with, nomenclaturalStatus: String @eq, nomenclaturalStatus_not: String @not, nomenclaturalStatus_in: [String] @in, nomenclaturalStatus_not_in: [String] @not_in, nomenclaturalStatus_contains: String @contains, nomenclaturalStatus_not_contains: String @not_contains, nomenclaturalStatus_starts_with: String @starts_with, nomenclaturalStatus_not_starts_with: String @not_starts_with, nomenclaturalStatus_ends_with: String @not_ends_with, page: String @eq, page_not: String @not, page_in: [String] @in, page_not_in: [String] @not_in, page_contains: String @contains, page_not_contains: String @not_contains, page_starts_with: String @starts_with, page_not_starts_with: String @not_starts_with, page_ends_with: String @not_ends_with, pageQualifier: String @eq, pageQualifier_not: String @not, pageQualifier_in: [String] @in, pageQualifier_not_in: [String] @not_in, pageQualifier_contains: String @contains, pageQualifier_not_contains: String @not_contains, pageQualifier_starts_with: String @starts_with, pageQualifier_not_starts_with: String @not_starts_with, pageQualifier_ends_with: String @not_ends_with, uri: String @eq, uri_not: String @not, uri_in: [String] @in, uri_not_in: [String] @not_in, uri_contains: String @contains, uri_not_contains: String @not_contains, uri_starts_with: String @starts_with, uri_not_starts_with: String @not_starts_with, uri_ends_with: String @not_ends_with, verbatimNameString: String @eq, verbatimNameString_not: String @not, verbatimNameString_in: [String] @in, verbatimNameString_not_in: [String] @not_in, verbatimNameString_contains: String @contains, verbatimNameString_not_contains: String @not_contains, verbatimNameString_starts_with: String @starts_with, verbatimNameString_not_starts_with: String @not_starts_with, verbatimNameString_ends_with: String @not_ends_with, instanceTypeName: String @eq, instanceTypeName_not: String @not, instanceTypeName_in: [String] @in, instanceTypeName_not_in: [String] @not_in, instanceTypeName_contains: String @contains, instanceTypeName_not_contains: String @not_contains, instanceTypeName_starts_with: String @starts_with, instanceTypeName_not_starts_with: String @not_starts_with, instanceTypeName_ends_with: String @not_ends_with): [Instance]! @paginate(model: "Instance")
    instance(id: ID! @eq): Instance! @find(model: "Instance")
    instancetypes(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, hasLabel: String @eq, hasLabel_not: String @not, hasLabel_in: [String] @in, hasLabel_not_in: [String] @not_in, hasLabel_contains: String @contains, hasLabel_not_contains: String @not_contains, hasLabel_starts_with: String @starts_with, hasLabel_not_starts_with: String @not_starts_with, hasLabel_ends_with: String @not_ends_with, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with, ofLabel: String @eq, ofLabel_not: String @not, ofLabel_in: [String] @in, ofLabel_not_in: [String] @not_in, ofLabel_contains: String @contains, ofLabel_not_contains: String @not_contains, ofLabel_starts_with: String @starts_with, ofLabel_not_starts_with: String @not_starts_with, ofLabel_ends_with: String @not_ends_with, sortOrder: Int @eq, sortOrder_not: Int @not, sortOrder_in: [Int] @in, sortOrder_not_in: [Int] @not_in, sortOrder_lt: Int @lt, sortOrder_lte: Int @lte, sortOrder_gt: Int @gt, sortOrder_gte: Int @gte): [InstanceType]! @all(model: "InstanceType")
    instancetypesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, hasLabel: String @eq, hasLabel_not: String @not, hasLabel_in: [String] @in, hasLabel_not_in: [String] @not_in, hasLabel_contains: String @contains, hasLabel_not_contains: String @not_contains, hasLabel_starts_with: String @starts_with, hasLabel_not_starts_with: String @not_starts_with, hasLabel_ends_with: String @not_ends_with, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with, ofLabel: String @eq, ofLabel_not: String @not, ofLabel_in: [String] @in, ofLabel_not_in: [String] @not_in, ofLabel_contains: String @contains, ofLabel_not_contains: String @not_contains, ofLabel_starts_with: String @starts_with, ofLabel_not_starts_with: String @not_starts_with, ofLabel_ends_with: String @not_ends_with, sortOrder: Int @eq, sortOrder_not: Int @not, sortOrder_in: [Int] @in, sortOrder_not_in: [Int] @not_in, sortOrder_lt: Int @lt, sortOrder_lte: Int @lte, sortOrder_gt: Int @gt, sortOrder_gte: Int @gte): [InstanceType]! @paginate(model: "InstanceType")
    instancetype(id: ID! @eq): InstanceType! @find(model: "InstanceType")
    names(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, fullName: String @eq, fullName_not: String @not, fullName_in: [String] @in, fullName_not_in: [String] @not_in, fullName_contains: String @contains, fullName_not_contains: String @not_contains, fullName_starts_with: String @starts_with, fullName_not_starts_with: String @not_starts_with, fullName_ends_with: String @not_ends_with, nameElement: String @eq, nameElement_not: String @not, nameElement_in: [String] @in, nameElement_not_in: [String] @not_in, nameElement_contains: String @contains, nameElement_not_contains: String @not_contains, nameElement_starts_with: String @starts_with, nameElement_not_starts_with: String @not_starts_with, nameElement_ends_with: String @not_ends_with, namePath: String @eq, namePath_not: String @not, namePath_in: [String] @in, namePath_not_in: [String] @not_in, namePath_contains: String @contains, namePath_not_contains: String @not_contains, namePath_starts_with: String @starts_with, namePath_not_starts_with: String @not_starts_with, namePath_ends_with: String @not_ends_with, sortName: String @eq, sortName_not: String @not, sortName_in: [String] @in, sortName_not_in: [String] @not_in, sortName_contains: String @contains, sortName_not_contains: String @not_contains, sortName_starts_with: String @starts_with, sortName_not_starts_with: String @not_starts_with, sortName_ends_with: String @not_ends_with, simpleName: String @eq, simpleName_not: String @not, simpleName_in: [String] @in, simpleName_not_in: [String] @not_in, simpleName_contains: String @contains, simpleName_not_contains: String @not_contains, simpleName_starts_with: String @starts_with, simpleName_not_starts_with: String @not_starts_with, simpleName_ends_with: String @not_ends_with, statusSummary: String @eq, statusSummary_not: String @not, statusSummary_in: [String] @in, statusSummary_not_in: [String] @not_in, statusSummary_contains: String @contains, statusSummary_not_contains: String @not_contains, statusSummary_starts_with: String @starts_with, statusSummary_not_starts_with: String @not_starts_with, statusSummary_ends_with: String @not_ends_with, verbatimRank: String @eq, verbatimRank_not: String @not, verbatimRank_in: [String] @in, verbatimRank_not_in: [String] @not_in, verbatimRank_contains: String @contains, verbatimRank_not_contains: String @not_contains, verbatimRank_starts_with: String @starts_with, verbatimRank_not_starts_with: String @not_starts_with, verbatimRank_ends_with: String @not_ends_with): [Name]! @all(model: "Name")
    namesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, fullName: String @eq, fullName_not: String @not, fullName_in: [String] @in, fullName_not_in: [String] @not_in, fullName_contains: String @contains, fullName_not_contains: String @not_contains, fullName_starts_with: String @starts_with, fullName_not_starts_with: String @not_starts_with, fullName_ends_with: String @not_ends_with, nameElement: String @eq, nameElement_not: String @not, nameElement_in: [String] @in, nameElement_not_in: [String] @not_in, nameElement_contains: String @contains, nameElement_not_contains: String @not_contains, nameElement_starts_with: String @starts_with, nameElement_not_starts_with: String @not_starts_with, nameElement_ends_with: String @not_ends_with, namePath: String @eq, namePath_not: String @not, namePath_in: [String] @in, namePath_not_in: [String] @not_in, namePath_contains: String @contains, namePath_not_contains: String @not_contains, namePath_starts_with: String @starts_with, namePath_not_starts_with: String @not_starts_with, namePath_ends_with: String @not_ends_with, sortName: String @eq, sortName_not: String @not, sortName_in: [String] @in, sortName_not_in: [String] @not_in, sortName_contains: String @contains, sortName_not_contains: String @not_contains, sortName_starts_with: String @starts_with, sortName_not_starts_with: String @not_starts_with, sortName_ends_with: String @not_ends_with, simpleName: String @eq, simpleName_not: String @not, simpleName_in: [String] @in, simpleName_not_in: [String] @not_in, simpleName_contains: String @contains, simpleName_not_contains: String @not_contains, simpleName_starts_with: String @starts_with, simpleName_not_starts_with: String @not_starts_with, simpleName_ends_with: String @not_ends_with, statusSummary: String @eq, statusSummary_not: String @not, statusSummary_in: [String] @in, statusSummary_not_in: [String] @not_in, statusSummary_contains: String @contains, statusSummary_not_contains: String @not_contains, statusSummary_starts_with: String @starts_with, statusSummary_not_starts_with: String @not_starts_with, statusSummary_ends_with: String @not_ends_with, verbatimRank: String @eq, verbatimRank_not: String @not, verbatimRank_in: [String] @in, verbatimRank_not_in: [String] @not_in, verbatimRank_contains: String @contains, verbatimRank_not_contains: String @not_contains, verbatimRank_starts_with: String @starts_with, verbatimRank_not_starts_with: String @not_starts_with, verbatimRank_ends_with: String @not_ends_with): [Name]! @paginate(model: "Name")
    name(id: ID! @eq): Name! @find(model: "Name")
    nameranks(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameRank]! @all(model: "NameRank")
    nameranksPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameRank]! @paginate(model: "NameRank")
    namerank(id: ID! @eq): NameRank! @find(model: "NameRank")
    namegroups(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameGroup]! @all(model: "NameGroup")
    namegroupsPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameGroup]! @paginate(model: "NameGroup")
    namegroup(id: ID! @eq): NameGroup! @find(model: "NameGroup")
    namestatuses(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameStatus]! @all(model: "NameStatus")
    namestatusesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameStatus]! @paginate(model: "NameStatus")
    namestatus(id: ID! @eq): NameStatus! @find(model: "NameStatus")
    nametypes(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameType]! @all(model: "NameType")
    nametypesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [NameType]! @paginate(model: "NameType")
    nametype(id: ID! @eq): NameType! @find(model: "NameType")
    references(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, citation: String @eq, citation_not: String @not, citation_in: [String] @in, citation_not_in: [String] @not_in, citation_contains: String @contains, citation_not_contains: String @not_contains, citation_starts_with: String @starts_with, citation_not_starts_with: String @not_starts_with, citation_ends_with: String @not_ends_with, displayTitle: String @eq, displayTitle_not: String @not, displayTitle_in: [String] @in, displayTitle_not_in: [String] @not_in, displayTitle_contains: String @contains, displayTitle_not_contains: String @not_contains, displayTitle_starts_with: String @starts_with, displayTitle_not_starts_with: String @not_starts_with, displayTitle_ends_with: String @not_ends_with, doi: String @eq, doi_not: String @not, doi_in: [String] @in, doi_not_in: [String] @not_in, doi_contains: String @contains, doi_not_contains: String @not_contains, doi_starts_with: String @starts_with, doi_not_starts_with: String @not_starts_with, doi_ends_with: String @not_ends_with, edition: String @eq, edition_not: String @not, edition_in: [String] @in, edition_not_in: [String] @not_in, edition_contains: String @contains, edition_not_contains: String @not_contains, edition_starts_with: String @starts_with, edition_not_starts_with: String @not_starts_with, edition_ends_with: String @not_ends_with, isbn: String @eq, isbn_not: String @not, isbn_in: [String] @in, isbn_not_in: [String] @not_in, isbn_contains: String @contains, isbn_not_contains: String @not_contains, isbn_starts_with: String @starts_with, isbn_not_starts_with: String @not_starts_with, isbn_ends_with: String @not_ends_with, issn: String @eq, issn_not: String @not, issn_in: [String] @in, issn_not_in: [String] @not_in, issn_contains: String @contains, issn_not_contains: String @not_contains, issn_starts_with: String @starts_with, issn_not_starts_with: String @not_starts_with, issn_ends_with: String @not_ends_with, pages: String @eq, pages_not: String @not, pages_in: [String] @in, pages_not_in: [String] @not_in, pages_contains: String @contains, pages_not_contains: String @not_contains, pages_starts_with: String @starts_with, pages_not_starts_with: String @not_starts_with, pages_ends_with: String @not_ends_with, publicationDate: DateTime @eq, publicationDate_not: DateTime @not, publicationDate_in: [DateTime] @in, publicationDate_not_in: [DateTime] @not_in, publicationDate_lt: DateTime @lt, publicationDate_lte: DateTime @lte, publicationDate_gt: DateTime @gt, publicationDate_gte: DateTime @gte, publishedLocation: String @eq, publishedLocation_not: String @not, publishedLocation_in: [String] @in, publishedLocation_not_in: [String] @not_in, publishedLocation_contains: String @contains, publishedLocation_not_contains: String @not_contains, publishedLocation_starts_with: String @starts_with, publishedLocation_not_starts_with: String @not_starts_with, publishedLocation_ends_with: String @not_ends_with, publisher: String @eq, publisher_not: String @not, publisher_in: [String] @in, publisher_not_in: [String] @not_in, publisher_contains: String @contains, publisher_not_contains: String @not_contains, publisher_starts_with: String @starts_with, publisher_not_starts_with: String @not_starts_with, publisher_ends_with: String @not_ends_with, title: String @eq, title_not: String @not, title_in: [String] @in, title_not_in: [String] @not_in, title_contains: String @contains, title_not_contains: String @not_contains, title_starts_with: String @starts_with, title_not_starts_with: String @not_starts_with, title_ends_with: String @not_ends_with, tl2: String @eq, tl2_not: String @not, tl2_in: [String] @in, tl2_not_in: [String] @not_in, tl2_contains: String @contains, tl2_not_contains: String @not_contains, tl2_starts_with: String @starts_with, tl2_not_starts_with: String @not_starts_with, tl2_ends_with: String @not_ends_with, uri: String @eq, uri_not: String @not, uri_in: [String] @in, uri_not_in: [String] @not_in, uri_contains: String @contains, uri_not_contains: String @not_contains, uri_starts_with: String @starts_with, uri_not_starts_with: String @not_starts_with, uri_ends_with: String @not_ends_with, verbatimAuthor: String @eq, verbatimAuthor_not: String @not, verbatimAuthor_in: [String] @in, verbatimAuthor_not_in: [String] @not_in, verbatimAuthor_contains: String @contains, verbatimAuthor_not_contains: String @not_contains, verbatimAuthor_starts_with: String @starts_with, verbatimAuthor_not_starts_with: String @not_starts_with, verbatimAuthor_ends_with: String @not_ends_with, volume: String @eq, volume_not: String @not, volume_in: [String] @in, volume_not_in: [String] @not_in, volume_contains: String @contains, volume_not_contains: String @not_contains, volume_starts_with: String @starts_with, volume_not_starts_with: String @not_starts_with, volume_ends_with: String @not_ends_with, year: Int @eq, year_not: Int @not, year_in: [Int] @in, year_not_in: [Int] @not_in, year_lt: Int @lt, year_lte: Int @lte, year_gt: Int @gt, year_gte: Int @gte): [Reference]! @all(model: "Reference")
    referencesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, citation: String @eq, citation_not: String @not, citation_in: [String] @in, citation_not_in: [String] @not_in, citation_contains: String @contains, citation_not_contains: String @not_contains, citation_starts_with: String @starts_with, citation_not_starts_with: String @not_starts_with, citation_ends_with: String @not_ends_with, displayTitle: String @eq, displayTitle_not: String @not, displayTitle_in: [String] @in, displayTitle_not_in: [String] @not_in, displayTitle_contains: String @contains, displayTitle_not_contains: String @not_contains, displayTitle_starts_with: String @starts_with, displayTitle_not_starts_with: String @not_starts_with, displayTitle_ends_with: String @not_ends_with, doi: String @eq, doi_not: String @not, doi_in: [String] @in, doi_not_in: [String] @not_in, doi_contains: String @contains, doi_not_contains: String @not_contains, doi_starts_with: String @starts_with, doi_not_starts_with: String @not_starts_with, doi_ends_with: String @not_ends_with, edition: String @eq, edition_not: String @not, edition_in: [String] @in, edition_not_in: [String] @not_in, edition_contains: String @contains, edition_not_contains: String @not_contains, edition_starts_with: String @starts_with, edition_not_starts_with: String @not_starts_with, edition_ends_with: String @not_ends_with, isbn: String @eq, isbn_not: String @not, isbn_in: [String] @in, isbn_not_in: [String] @not_in, isbn_contains: String @contains, isbn_not_contains: String @not_contains, isbn_starts_with: String @starts_with, isbn_not_starts_with: String @not_starts_with, isbn_ends_with: String @not_ends_with, issn: String @eq, issn_not: String @not, issn_in: [String] @in, issn_not_in: [String] @not_in, issn_contains: String @contains, issn_not_contains: String @not_contains, issn_starts_with: String @starts_with, issn_not_starts_with: String @not_starts_with, issn_ends_with: String @not_ends_with, pages: String @eq, pages_not: String @not, pages_in: [String] @in, pages_not_in: [String] @not_in, pages_contains: String @contains, pages_not_contains: String @not_contains, pages_starts_with: String @starts_with, pages_not_starts_with: String @not_starts_with, pages_ends_with: String @not_ends_with, publicationDate: DateTime @eq, publicationDate_not: DateTime @not, publicationDate_in: [DateTime] @in, publicationDate_not_in: [DateTime] @not_in, publicationDate_lt: DateTime @lt, publicationDate_lte: DateTime @lte, publicationDate_gt: DateTime @gt, publicationDate_gte: DateTime @gte, publishedLocation: String @eq, publishedLocation_not: String @not, publishedLocation_in: [String] @in, publishedLocation_not_in: [String] @not_in, publishedLocation_contains: String @contains, publishedLocation_not_contains: String @not_contains, publishedLocation_starts_with: String @starts_with, publishedLocation_not_starts_with: String @not_starts_with, publishedLocation_ends_with: String @not_ends_with, publisher: String @eq, publisher_not: String @not, publisher_in: [String] @in, publisher_not_in: [String] @not_in, publisher_contains: String @contains, publisher_not_contains: String @not_contains, publisher_starts_with: String @starts_with, publisher_not_starts_with: String @not_starts_with, publisher_ends_with: String @not_ends_with, title: String @eq, title_not: String @not, title_in: [String] @in, title_not_in: [String] @not_in, title_contains: String @contains, title_not_contains: String @not_contains, title_starts_with: String @starts_with, title_not_starts_with: String @not_starts_with, title_ends_with: String @not_ends_with, tl2: String @eq, tl2_not: String @not, tl2_in: [String] @in, tl2_not_in: [String] @not_in, tl2_contains: String @contains, tl2_not_contains: String @not_contains, tl2_starts_with: String @starts_with, tl2_not_starts_with: String @not_starts_with, tl2_ends_with: String @not_ends_with, uri: String @eq, uri_not: String @not, uri_in: [String] @in, uri_not_in: [String] @not_in, uri_contains: String @contains, uri_not_contains: String @not_contains, uri_starts_with: String @starts_with, uri_not_starts_with: String @not_starts_with, uri_ends_with: String @not_ends_with, verbatimAuthor: String @eq, verbatimAuthor_not: String @not, verbatimAuthor_in: [String] @in, verbatimAuthor_not_in: [String] @not_in, verbatimAuthor_contains: String @contains, verbatimAuthor_not_contains: String @not_contains, verbatimAuthor_starts_with: String @starts_with, verbatimAuthor_not_starts_with: String @not_starts_with, verbatimAuthor_ends_with: String @not_ends_with, volume: String @eq, volume_not: String @not, volume_in: [String] @in, volume_not_in: [String] @not_in, volume_contains: String @contains, volume_not_contains: String @not_contains, volume_starts_with: String @starts_with, volume_not_starts_with: String @not_starts_with, volume_ends_with: String @not_ends_with, year: Int @eq, year_not: Int @not, year_in: [Int] @in, year_not_in: [Int] @not_in, year_lt: Int @lt, year_lte: Int @lte, year_gt: Int @gt, year_gte: Int @gte): [Reference]! @paginate(model: "Reference")
    reference(id: ID! @eq): Reference! @find(model: "Reference")
    refauthorroles(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [RefAuthorRole]! @all(model: "RefAuthorRole")
    refauthorrolesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [RefAuthorRole]! @paginate(model: "RefAuthorRole")
    refauthorrole(id: ID! @eq): RefAuthorRole! @find(model: "RefAuthorRole")
    reftypes(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [RefType]! @all(model: "RefType")
    reftypesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with): [RefType]! @paginate(model: "RefType")
    reftype(id: ID! @eq): RefType! @find(model: "RefType")
    namecategories(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, maxParentsAllowed: Int @eq, maxParentsAllowed_not: Int @not, maxParentsAllowed_in: [Int] @in, maxParentsAllowed_not_in: [Int] @not_in, maxParentsAllowed_lt: Int @lt, maxParentsAllowed_lte: Int @lte, maxParentsAllowed_gt: Int @gt, maxParentsAllowed_gte: Int @gte, minParentsRequired: Int @eq, minParentsRequired_not: Int @not, minParentsRequired_in: [Int] @in, minParentsRequired_not_in: [Int] @not_in, minParentsRequired_lt: Int @lt, minParentsRequired_lte: Int @lte, minParentsRequired_gt: Int @gt, minParentsRequired_gte: Int @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with, sortOrder: Int @eq, sortOrder_not: Int @not, sortOrder_in: [Int] @in, sortOrder_not_in: [Int] @not_in, sortOrder_lt: Int @lt, sortOrder_lte: Int @lte, sortOrder_gt: Int @gt, sortOrder_gte: Int @gte): [NameCategory]! @all(model: "NameCategory")
    namecategoriesPaginated(id: ID @eq, id_not: ID @not, id_in: [ID] @in, id_not_in: [ID] @not_in, id_lt: ID @lt, id_lte: ID @lte, id_gt: ID @gt, id_gte: ID @gte, maxParentsAllowed: Int @eq, maxParentsAllowed_not: Int @not, maxParentsAllowed_in: [Int] @in, maxParentsAllowed_not_in: [Int] @not_in, maxParentsAllowed_lt: Int @lt, maxParentsAllowed_lte: Int @lte, maxParentsAllowed_gt: Int @gt, maxParentsAllowed_gte: Int @gte, minParentsRequired: Int @eq, minParentsRequired_not: Int @not, minParentsRequired_in: [Int] @in, minParentsRequired_not_in: [Int] @not_in, minParentsRequired_lt: Int @lt, minParentsRequired_lte: Int @lte, minParentsRequired_gt: Int @gt, minParentsRequired_gte: Int @gte, name: String @eq, name_not: String @not, name_in: [String] @in, name_not_in: [String] @not_in, name_contains: String @contains, name_not_contains: String @not_contains, name_starts_with: String @starts_with, name_not_starts_with: String @not_starts_with, name_ends_with: String @not_ends_with, sortOrder: Int @eq, sortOrder_not: Int @not, sortOrder_in: [Int] @in, sortOrder_not_in: [Int] @not_in, sortOrder_lt: Int @lt, sortOrder_lte: Int @lte, sortOrder_gt: Int @gt, sortOrder_gte: Int @gte): [NameCategory]! @paginate(model: "NameCategory")
    namecategory(id: ID! @eq): NameCategory! @find(model: "NameCategory")
}

type Mutation{
    createAuthor(input: createAuthorInput!): Author @create(model: "Author", flatten: true)
    updateAuthor(input: updateAuthorInput!): Author @update(model: "Author", flatten: true)
    deleteAuthor(id: ID!): Author @delete
    createInstance(input: createInstanceInput!): Instance @create(model: "Instance", flatten: true)
    updateInstance(input: updateInstanceInput!): Instance @update(model: "Instance", flatten: true)
    deleteInstance(id: ID!): Instance @delete
    createInstanceType(input: createInstanceTypeInput!): InstanceType @create(model: "InstanceType", flatten: true)
    updateInstanceType(input: updateInstanceTypeInput!): InstanceType @update(model: "InstanceType", flatten: true)
    deleteInstanceType(id: ID!): InstanceType @delete
    createName(input: createNameInput!): Name @create(model: "Name", flatten: true)
    updateName(input: updateNameInput!): Name @update(model: "Name", flatten: true)
    deleteName(id: ID!): Name @delete
    createNameRank(input: createNameRankInput!): NameRank @create(model: "NameRank", flatten: true)
    updateNameRank(input: updateNameRankInput!): NameRank @update(model: "NameRank", flatten: true)
    deleteNameRank(id: ID!): NameRank @delete
    createNameGroup(input: createNameGroupInput!): NameGroup @create(model: "NameGroup", flatten: true)
    updateNameGroup(input: updateNameGroupInput!): NameGroup @update(model: "NameGroup", flatten: true)
    deleteNameGroup(id: ID!): NameGroup @delete
    createNameStatus(input: createNameStatusInput!): NameStatus @create(model: "NameStatus", flatten: true)
    updateNameStatus(input: updateNameStatusInput!): NameStatus @update(model: "NameStatus", flatten: true)
    deleteNameStatus(id: ID!): NameStatus @delete
    createNameType(input: createNameTypeInput!): NameType @create(model: "NameType", flatten: true)
    updateNameType(input: updateNameTypeInput!): NameType @update(model: "NameType", flatten: true)
    deleteNameType(id: ID!): NameType @delete
    createReference(input: createReferenceInput!): Reference @create(model: "Reference", flatten: true)
    updateReference(input: updateReferenceInput!): Reference @update(model: "Reference", flatten: true)
    deleteReference(id: ID!): Reference @delete
    createRefAuthorRole(input: createRefAuthorRoleInput!): RefAuthorRole @create(model: "RefAuthorRole", flatten: true)
    updateRefAuthorRole(input: updateRefAuthorRoleInput!): RefAuthorRole @update(model: "RefAuthorRole", flatten: true)
    deleteRefAuthorRole(id: ID!): RefAuthorRole @delete
    createRefType(input: createRefTypeInput!): RefType @create(model: "RefType", flatten: true)
    updateRefType(input: updateRefTypeInput!): RefType @update(model: "RefType", flatten: true)
    deleteRefType(id: ID!): RefType @delete
    createNameCategory(input: createNameCategoryInput!): NameCategory @create(model: "NameCategory", flatten: true)
    updateNameCategory(input: updateNameCategoryInput!): NameCategory @update(model: "NameCategory", flatten: true)
    deleteNameCategory(id: ID!): NameCategory @delete
}

input createAuthorInput {abbrev: String fullName: String ipniId: String name: String!}
input updateAuthorInput {abbrev: String fullName: String ipniId: String name: String! id: ID!}
input createInstanceInput {bhlUrl: String nomenclaturalStatus: String page: String pageQualifier: String uri: String verbatimNameString: String instanceTypeName: String citedBy_id: ID cites_id: ID instanceType_id: ID! name_id: ID! parent_id: ID reference_id: ID! relationshipInstances_id: ID! basionym_id: ID synonymOf_id: ID synonyms_id: ID! misapplications_id: ID! misappliedTo_id: ID}
input updateInstanceInput {bhlUrl: String nomenclaturalStatus: String page: String pageQualifier: String uri: String verbatimNameString: String instanceTypeName: String citedBy_id: ID cites_id: ID instanceType_id: ID! name_id: ID! parent_id: ID reference_id: ID! relationshipInstances_id: ID! basionym_id: ID synonymOf_id: ID synonyms_id: ID! misapplications_id: ID! misappliedTo_id: ID id: ID!}
input createInstanceTypeInput {hasLabel: String name: String! ofLabel: String sortOrder: Int}
input updateInstanceTypeInput {hasLabel: String name: String! ofLabel: String sortOrder: Int id: ID!}
input createNameInput {fullName: String! nameElement: String! namePath: String sortName: String simpleName: String! statusSummary: String verbatimRank: String author_id: ID basAuthor_id: ID basExAuthor_id: ID exAuthor_id: ID nameRank_id: ID! nameStatus_id: ID! nameType_id: ID! parent_id: ID}
input updateNameInput {fullName: String! nameElement: String! namePath: String sortName: String simpleName: String! statusSummary: String verbatimRank: String author_id: ID basAuthor_id: ID basExAuthor_id: ID exAuthor_id: ID nameRank_id: ID! nameStatus_id: ID! nameType_id: ID! parent_id: ID id: ID!}
input createNameRankInput {name: String! parentRank_id: ID nameGroup_id: ID}
input updateNameRankInput {name: String! parentRank_id: ID nameGroup_id: ID id: ID!}
input createNameGroupInput {name: String!}
input updateNameGroupInput {name: String! id: ID!}
input createNameStatusInput {name: String! nameGroup_id: ID}
input updateNameStatusInput {name: String! nameGroup_id: ID id: ID!}
input createNameTypeInput {name: String! nameGroup_id: ID}
input updateNameTypeInput {name: String! nameGroup_id: ID id: ID!}
input createReferenceInput {citation: String displayTitle: String doi: String edition: String isbn: String issn: String pages: String publicationDate: DateTime publishedLocation: String publisher: String title: String! tl2: String uri: String verbatimAuthor: String volume: String year: Int author_id: ID! parent_id: ID refAuthorRole_id: ID! refType_id: ID!}
input updateReferenceInput {citation: String displayTitle: String doi: String edition: String isbn: String issn: String pages: String publicationDate: DateTime publishedLocation: String publisher: String title: String! tl2: String uri: String verbatimAuthor: String volume: String year: Int author_id: ID! parent_id: ID refAuthorRole_id: ID! refType_id: ID! id: ID!}
input createRefAuthorRoleInput {name: String!}
input updateRefAuthorRoleInput {name: String! id: ID!}
input createRefTypeInput {name: String! parent_id: ID}
input updateRefTypeInput {name: String! parent_id: ID id: ID!}
input createNameCategoryInput {maxParentsAllowed: Int! minParentsRequired: Int! name: String! sortOrder: Int!}
input updateNameCategoryInput {maxParentsAllowed: Int! minParentsRequired: Int! name: String! sortOrder: Int! id: ID!}
